{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "democratree API",
  "Parameters": {
    "LambdaS3ObjectVersion": {
      "Type": "String",
      "Description": "Leave blank to not create the Lambda"
    }
  },
  "Conditions": {
    "DeployLambda": {"Fn::Equals": [{"Ref" : "LambdaS3ObjectVersion"}, ""]}
  },
  "Resources": {
    "LambdaBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": "democratree-api-lambda",
        "VersioningConfiguration": {
          "Status": "Enabled"
        }
      }
    },
    "LambdaRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [{
            "Effect": "Allow",
            "Principal": {
              "Service": "lambda.amazonaws.com"
            },
            "Action": ["sts:AssumeRole"]
          }]
        },
        "Path": "/",
        "Policies": [{
          "PolicyName": "logs",
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [{
              "Effect": "Allow",
              "Action": [
                 "logs:*"
              ],
              "Resource": "arn:aws:logs:*:*:*"
            }]
          }
        }, {
          "PolicyName": "sqs",
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [{
              "Sid": "Stmt1424083772000",
              "Effect": "Allow",
              "Action": ["sqs:SendMessage"],
              "Resource": [{"Fn::GetAtt": ["Queue", "Arn"]}]
            }]
          }
        }]
      }
    },
    "LambdaGitHubPOST": {
      "Type" : "AWS::Lambda::Function",
      "Condition": "DeployLambda",
      "Properties": {
        "Code": {
          "S3Bucket": {"Ref": "LambdaBucket"},
          "S3Key": "lambda.zip",
          "S3ObjectVersion": {"Ref": "LambdaS3ObjectVersion"}
        },
        "Description": "GitHub POST",
        "Handler": "githubPOST.handler",
        "MemorySize": 128,
        "Role": {"Fn::GetAtt": ["LambdaRole", "Arn"]},
        "Runtime": "nodejs",
        "Timeout": 10
      }
    },
    "AlarmTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "TopicName": "democratree-alarm"
      }
    },
    "DLQueue": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "MessageRetentionPeriod": 1209600,
        "QueueName": "democratree-worker-dlq"
      }
    },
    "DLQueueDepthAlarm": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "AlarmDescription": "Alarm if queue depth grows beyond 1 message",
        "Namespace": "AWS/SQS",
        "MetricName": "ApproximateNumberOfMessagesVisible",
        "Dimensions": [{
          "Name": "QueueName",
          "Value": { "Fn::GetAtt": ["DLQueue", "QueueName"] }
        }],
        "Statistic": "Sum",
        "Period": "300",
        "EvaluationPeriods": "1",
        "Threshold": "1",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "AlarmActions": [{
          "Ref": "AlarmTopic"
        }]
      }
    },
    "Queue": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "MessageRetentionPeriod": 1209600,
        "QueueName": "democratree-worker",
        "RedrivePolicy": {
          "deadLetterTargetArn": { "Fn::GetAtt": ["DLQueue", "Arn"]},
          "maxReceiveCount": 5
        }
      }
    },
    "QueueDepthAlarm": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "AlarmDescription": "Alarm if queue depth grows beyond 10 messages",
        "Namespace": "AWS/SQS",
        "MetricName": "ApproximateNumberOfMessagesVisible",
        "Dimensions": [{
          "Name": "QueueName",
          "Value": { "Fn::GetAtt": ["Queue", "QueueName"] }
        }],
        "Statistic": "Sum",
        "Period": "300",
        "EvaluationPeriods": "1",
        "Threshold": "5",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "AlarmActions": [{
          "Ref": "AlarmTopic"
        }]
      }
    }
  },
  "Outputs": {
    "Queue": {
      "Value": {"Ref": "Queue"}
    }
  }
}
